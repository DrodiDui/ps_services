server:
  port: 9001

spring:
  application:
    name: workspace-service
  security:
    oauth2:
      resourceserver:
        jwt:
          public-key-location: classpath:pv-public.pem
          iss: 1

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: ps_workspace
    password: ps_workspace
  flyway:
    enabled: true
    url: jdbc:postgresql://localhost:5432/postgres
    user: ps_workspace
    password: ps_workspace

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      bootstrap-servers: localhost:9092
      transaction-id-prefix: ${spring.application.name}-tx.
      properties.spring.json.add.type.headers: true
      ack: -1
    consumer:
      bootstrap-servers: localhost:9092
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      max-poll-records: 2
      properties:
        isolation.level: read_committed
        spring.json.trusted.packages: 'com.kapitonau.ps.apirequestlib.kafka'
    listener:
      ack-mode: manual_immediate
    properties:
      max.block.ms: 7000

kafka-topics:
  model-event:
    name: model-event
  project-create-event:
    name: project-create-event
  member-create-event:
    name: member-create-event
    groupId: default_member-create-event_groupId
  user-workspace-role-event:
    name: user-workspace-role-event
  git-create-event:
    name: git-create-event



core:
  config:
    security:
      security-props:
        path: classpath:application-access.yaml


api:
  reference-service:
    url: http://localhost:9000


offline-token: eyJraWQiOiIzNTlhMWE1Yy1jNjY3LTRjNWQtODAyMi1mZGJiNzExZTFmYTAiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJib3Jpcy5rYXBpdG9ub3YuOTkiLCJhdWQiOiJkZW1vLWNsaWVudCIsIm5iZiI6MTc1MDc4MzU0NCwic2NvcGUiOlsicmVhZCwiLCJvcGVuSWQiXSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDoxMDAwMSIsIndvcmtzcGFjZS1hdXRob3JpdGllcyI6W3sid29ya3NwYWNlSWQiOjIsInJvbGVOYW1lIjoiTUFJTlRBSU5FUiIsImF1dGhvcml0aWVzIjpbIlJFRkVSRU5DRV9SRUFEIiwiUkVGRVJFTkNFX0lURU1fUkVBRCIsIldPUktTUEFDRV9SRUFEIiwiV09SS1NQQUNFX1dSSVRFIiwiUFJPSkVDVF9SRUFEIiwiUFJPSkVDVF9XUklURSIsIk1FTUJFUlNfUkVBRCIsIk1FTUJFUlNfV1JJVEUiLCJUQVNLU19SRUFEIiwiVEFTS1NfV1JJVEUiLCJUQUdTX1JFQUQiLCJUQUdTX1dSSVRFIiwiUkVQT1NJVE9SWV9SRUFEIiwiUkVQT1NJVE9SWV9XUklURSIsIlJFUE9TSVRPUllfQ09NTUVOVF9SRUFEIiwiUkVQT1NJVE9SWV9DT01NRU5UX1dSSVRFIiwiRE9DVU1FTlRBVElPTl9SRUFEIiwiRE9DVU1FTlRBVElPTl9XUklURSJdfV0sImV4cCI6MTc1MDk5OTU0NCwiaWF0IjoxNzUwNzgzNTQ0LCJ1c2VySWQiOjEsImp0aSI6IjcyOTg5MGM1LTc4Y2YtNDk0My1iNzA1LTIyMTBkMTM0MTNkYiIsImVtYWlsIjoiYm9yaXMua2FwaXRvbm92Ljk5QGdtYWlsLmNvbSJ9.fIRkcpTuqzfPfE0oC-X3mF7meGGi8k9HT7JnqmyVlzP2Z79oItOBYlCRnr3poCWwv-k89eQxs5zzsIKN6ge5oKsTS7Ih3RJy_kBOW6qF_sltQdJheGWTD4MRAaUfaJ61ZXx_9FxzJZ7RXpGIWtOlLwSQo2eBK3coQjnAWcjykfFvGfxyZgRKSqtIDta9eJ86skEsTJeD34oSfQIvmzUXPAClHEBk-jnb130v9MT48OCdxZIH6q5On-GqT2h0xzASH2mKzfTJljhq8do9CtUGFFfOANs2YRTHFu6mwGgUWAkpjt0o0n7RPbICtdJ_anPaRyPxGN1LEeARPKXx6KJLr4hzj8q62-LJhPXmnPHFjLiy1gv0uQTWn69v5ZK1z7WAoKEVVDoxB1dsQQhNPR9WrUPjINDX7zYOI6SwE4PFaN_kdOVMJEDEQQKQrx0Q8OwRul1k4lwOVFwGjFP4C4cWs-GWygmhI2tTMtxVUWdE7YzPtLRfLWmy2_XEH0V1YpXNkmNL-ifI9zzp6RJujz7GOdnZ8T0s_yEW7wWEyRNilmt0GPTmBb3JyqvY1PKp_8FogufEGCL-KpNUT4oH_PK150cm5f43FcNroH-Wp-LP0YmY3pH8NSwP2OqoJcM3GS_BZVZ14eQIAvmG_8lWWosHJNzXftMzmOdIR9lF6W3EDHo


